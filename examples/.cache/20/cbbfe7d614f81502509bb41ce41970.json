{"id":"../../src/functions/isFunction.ts","dependencies":[{"name":"C:\\Users\\SergejSchwabauer\\Desktop\\Projekte\\SPFxAppDev\\ts-utility\\tsconfig.json","includedInParent":true,"mtime":1636466182598},{"name":"C:\\Users\\SergejSchwabauer\\Desktop\\Projekte\\SPFxAppDev\\ts-utility\\examples\\package.json","includedInParent":true,"mtime":1645697025264},{"name":"./isset","loc":{"line":1,"column":18},"parent":"C:\\Users\\SergejSchwabauer\\Desktop\\Projekte\\SPFxAppDev\\ts-utility\\src\\functions\\isFunction.ts","resolved":"C:\\Users\\SergejSchwabauer\\Desktop\\Projekte\\SPFxAppDev\\ts-utility\\src\\functions\\isset.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFunction;\n\nvar _isset = _interopRequireDefault(require(\"./isset\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Determines wheter the Property is a Function.\r\n * @param {any} property The Property to be determined.\r\n * @returns {boolean} Wheter the Property is a Function.\r\n * @since 1.0.0\r\n */\nfunction isFunction(property) {\n  return (0, _isset.default)(property) && typeof property === 'function';\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":18,"column":0}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":18,"column":9}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":18,"column":19}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":35},"generated":{"line":18,"column":20}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":14},"generated":{"line":18,"column":28}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":9,"column":48},"generated":{"line":18,"column":30}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":19,"column":0}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":19,"column":9}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":17},"generated":{"line":19,"column":29}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":19,"column":37}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":30},"generated":{"line":19,"column":42}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":37},"generated":{"line":19,"column":49}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":30},"generated":{"line":19,"column":57}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":50},"generated":{"line":19,"column":62}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":19,"column":72}},{"source":"../../src/functions/isFunction.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../src/functions/isFunction.ts":"import isset from './isset';\r\n\r\n/**\r\n * Determines wheter the Property is a Function.\r\n * @param {any} property The Property to be determined.\r\n * @returns {boolean} Wheter the Property is a Function.\r\n * @since 1.0.0\r\n */\r\nexport default function isFunction(property: any): boolean {\r\n    return isset(property) && typeof property === 'function';\r\n}"},"lineCount":null}},"error":null,"hash":"604026ef4822f56a6fa834cd816f3955","cacheData":{"env":{}}}